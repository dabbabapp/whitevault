load File.expand_path("fix_grpc_flags.rb", __dir__)
# Uncomment this line to define a global platform for your project
platform :ios, '16.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # GTMSessionFetcher constraints removed for Firebase 12.0.0 compatibility
end

post_install do |installer|
  fix_grpc_compiler_flags(installer)
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings["GCC_PREPROCESSOR_DEFINITIONS"] ||= [
        "$(inherited)",
        "PERMISSION_EVENTS=1",
        "PERMISSION_REMINDERS=1",
        "PERMISSION_CONTACTS=1",
        "PERMISSION_CAMERA=1",
        "PERMISSION_MICROPHONE=1",
        "PERMISSION_SPEECH_RECOGNIZER=1",
        "PERMISSION_PHOTOS=1",
        "PERMISSION_NOTIFICATIONS=1",
      ]
      config.build_settings["IPHONEOS_DEPLOYMENT_TARGET"] = "13.0"
      
      # Completely remove and reset all compiler flags
      config.build_settings.delete("OTHER_CFLAGS")
      config.build_settings.delete("OTHER_CPLUSPLUSFLAGS")
      config.build_settings.delete("OTHER_SWIFT_FLAGS")
      config.build_settings.delete("WARNING_CFLAGS")
      
      config.build_settings["OTHER_CFLAGS"] = "-w"
      config.build_settings["OTHER_CPLUSPLUSFLAGS"] = "-w"
      config.build_settings["OTHER_SWIFT_FLAGS"] = ""
      config.build_settings["SWIFT_VERSION"] = "5.0"
      config.build_settings["CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES"] = "YES"
      config.build_settings["ENABLE_BITCODE"] = "NO"
      config.build_settings["GCC_C_LANGUAGE_STANDARD"] = "gnu11"
      config.build_settings["CLANG_CXX_LANGUAGE_STANDARD"] = "gnu++17"
      config.build_settings["CLANG_CXX_LIBRARY"] = "libc++"
      config.build_settings["GCC_WARN_INHIBIT_ALL_WARNINGS"] = "YES"
    end
  end
  
  # Project-level settings to ensure no -G flags survive
  installer.pods_project.build_configurations.each do |config|
    config.build_settings.delete("OTHER_CFLAGS")
    config.build_settings.delete("OTHER_CPLUSPLUSFLAGS")
    config.build_settings.delete("WARNING_CFLAGS")
    config.build_settings["OTHER_CFLAGS"] = "-w"
    config.build_settings["OTHER_CPLUSPLUSFLAGS"] = "-w"
    config.build_settings["GCC_WARN_INHIBIT_ALL_WARNINGS"] = "YES"
  end
end